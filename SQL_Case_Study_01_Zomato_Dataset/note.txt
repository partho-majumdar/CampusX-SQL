    - select a database
-- USE zomato_cs1
SELECT * FROM users

    - count number of rows
SELECT COUNT(*) FROM orders

    - select a random rows
SELECT * FROM users ORDER BY rand() LIMIT 5

    - find null values 
SELECT * FROM orders WHERE restaurant_rating IS NULL

    - replace NULL value with 0
UPDATE orders SET restaurant_rating = 0 WHERE restaurant_rating IS NULL

    - orders placed by each customer
SELECT t2.name, COUNT(*) AS 'num_of_orders' FROM orders t1
JOIN users t2
ON t1.user_id = t2.user_id
GROUP BY t2.user_id

    - find restaurant with most number of menu items
SELECT r_name, COUNT(*) AS 'menu_items' FROM restaurants t1
JOIN menu t2
ON t1.r_id = t2.r_id
GROUP BY t2.r_id

    - find the number of votes and avg rating for all the restaurants 
SELECT r_name, COUNT(*) AS 'num_votes', ROUND(AVG(restaurant_rating), 2) AS 'rating'
FROM orders t1
JOIN restaurants t2 
ON t1.r_id = t2.r_id
WHERE restaurant_rating IS NOT NULL 
GROUP BY t1.r_id

    - find the food that is being sold at most number of restaurants
SELECT f_name, COUNT(*) AS 'num_of_res' FROM menu t1
JOIN food t2
ON t1.f_id = t2.f_id
GROUP BY t1.f_id
ORDER BY num_of_res DESC LIMIT 1

    - find restaurants with max revenue in a given month
-- SELECT MONTH(DATE(date)), date FROM orders

SELECT r_name, SUM(amount) AS 'revenue' FROM orders t1
JOIN restaurants t2
ON t1.r_id = t2.r_id
WHERE MONTH(DATE(date)) = '6'
GROUP BY t1.r_id
ORDER BY revenue DESC LIMIT 1

    - month by month revenue for a particular restaurant = kfc
SELECT MONTHNAME(DATE(date)) AS 'month', SUM(amount) AS 'revenue' FROM orders t1
JOIN restaurants t2
ON t1.r_id = t2.r_id
WHERE r_name = 'kfc'
GROUP BY month

    - find restaurants with sales > X amount
SELECT r_name, SUM(amount) AS 'revenue' FROM orders t1
JOIN restaurants t2
ON t1.r_id = t2.r_id
GROUP BY t1.r_id
HAVING revenue > 1500

    - find customers who have never ordered
 SELECT user_id, name FROM users
 EXCEPT
 SELECT t1.user_id, name FROM orders t1
 JOIN users t2
 ON t1.user_id = t2.user_id

    - show order details of a particular customer in a given range
SELECT t1.order_id, f_name, date FROM orders t1
JOIN order_details t2
ON t1.order_id = t2.order_id
JOIN food t3 
ON t2.f_id = t3.f_id
WHERE user_id = 5 AND date BETWEEN '2022-05-15' AND '2022-07-15'

    - find most costly restaurants (avg price/dish)
SELECT r_name,SUM(price)/COUNT(*) AS 'Avg_price' FROM menu t1
JOIN restaurants t2
ON t1.r_id = t2.r_id
GROUP BY t1.r_id
ORDER BY Avg_price ASC LIMIT 1

    - find delivery partner compensation using the formula (#deliveries*100 + 1000*avg_rating)
SELECT partner_name,COUNT(*) * 100  + AVG(delivery_rating)*1000 AS 'salary'
FROM orders t1
JOIN delivery_partner t2
ON t1.partner_id = t2.partner_id
GROUP BY t1.partner_id
ORDER BY salary DESC;

    - find all the veg restaurants
SELECT r_name FROM menu t1
JOIN food t2
ON t1.f_id = t2.f_id
JOIN restaurants t3
ON t1.r_id = t3.r_id
GROUP BY t1.r_id
HAVING MIN(type) = 'Veg' AND MAX(type) = 'Veg'

    - find min and max order value for all the customers
SELECT name,MIN(amount),MAX(amount),AVG(amount) FROM orders t1
JOIN users t2
ON t1.user_id = t2.user_id
GROUP BY t1.user_id
